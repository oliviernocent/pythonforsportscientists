{"config":{"lang":["fr"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Une approche bas\u00e9e exemple pour les sciences du sport","text":"<p>Ce cours n'a pas l'ambition de pr\u00e9senter le langage Python de mani\u00e8re exhaustive :  t\u00e2che titanesque au demeurant. J'ai plut\u00f4t privil\u00e9gi\u00e9 une approche guid\u00e9e par des  exemples familiers \u00e0 des \u00e9tudiants en sciences du sport : ???, ???,  trac\u00e9 de parcours de course sur une carte \u00e0 partir de coordonn\u00e9es GPS, etc.</p> <p>Chaque exemple est pr\u00e9texte \u00e0 aborder des notions centrales en programmation (variables, tests, boucles) et \u00e0 pr\u00e9senter des biblioth\u00e8ques int\u00e9ressantes qui viennent enrichir le langage Python. Si vous \u00eates novice en programmation, je vous encourage \u00e0 \u00e9tudier chaque chapitre dans l'ordre pour vous familiariser progressivement \u00e0 cette nouvelle connaissance. Par contre, si vous \u00eates un d\u00e9veloppeur d\u00e9j\u00e0 exp\u00e9riment\u00e9, vous pouvez papillonner de chapitres en chapitres pour d\u00e9couvrir des modules comme <code>polars</code>, <code>plotly</code>, <code>beautifulsoup4</code>, <code>folium</code>, <code>requests</code> ou <code>opencv</code>. </p>"},{"location":"#installation-de-python","title":"Installation de Python","text":"<p>L'ex\u00e9cution de scripts Python n\u00e9cessite l'utilisation d'un interpr\u00e8te, logiciel qui traduit chaque instruction du script en code machine compr\u00e9hensible par le microprocesseur. Il est disponible pour les plateformes les plus courantes (Windows, macOS, Linux, Raspberry Pi). Tous les exemples de ce cours sont \u00e9crits en Python 3. </p> <p>Python 3 </p> <p>Attention !</p> <p>Lorsque vous installez Python sous Windows, n'oubliez pas d'ajouter l'emplacement de l'interpr\u00e8te Python \u00e0 la variable d'environnement <code>PATH</code> en cochant la case surlign\u00e9e ci-dessous. </p> <p></p>"},{"location":"#demarrage-de-idle","title":"D\u00e9marrage de IDLE","text":"<p>IDLE est l'environnement de d\u00e9veloppement par d\u00e9faut de Python 3. Il comprend :</p> <p>Un interpr\u00e8te en ligne de commande (shell) : pour effectuer des calculs ou ex\u00e9cuter des programmes simples  Un \u00e9diteur de code : pour r\u00e9diger des scripts plus complexes qui pourront ensuite \u00eatre ex\u00e9cut\u00e9s dans le shell Python </p> <p>L'interpr\u00e8te en ligne de commande ressemble \u00e0 une calculatrice avanc\u00e9e. \u00c0 droite de l'invite de comnande (<code>&gt;&gt;&gt;</code>), on peut saisir des instructions simples qui sont directement ex\u00e9cut\u00e9es d\u00e8s que l'on appuie sur la touche ++Entr\u00e9e++.</p> <p>Pour aller plus loin et automatiser des traitements plus complexes, nous aurons recours \u00e0 des scripts, fichiers texte contenant une succession d'instructions Python. On cr\u00e9e un nouveau script via le menu ++File++ / ++New File++. En r\u00e8gle g\u00e9n\u00e9rale, un script Python a pour extension <code>.py</code>. Enfin, on ex\u00e9cute le script Python dans le shell de IDLE via le menu ++Run++ / ++Run Module++ (touche de raccourci ++F5++).</p> <p>Pas de panique, nous aurons l'occasion de manipuler l'interpr\u00e8te en ligne de commande et de nous familiariser progressivement avec l'\u00e9diteur de scripts au fil des chapitres suivants. </p>"},{"location":"#choix-dun-autre-editeur-de-code","title":"Choix d'un autre \u00e9diteur de code","text":"<p>Pour remplacer IDLE lors de l'\u00e9dition de vos scripts Python, vous n'aurez besoin que d'un simple \u00e9diteur de texte comme le bloc notes de Windows. N\u00e9anmoins, je vous encourage \u00e0 utiliser un \u00e9diteur un peu plus sophistiqu\u00e9 qui propose :</p> <ul> <li>un navigateur de fichiers</li> <li>un syst\u00e8me d'onglets pour l'\u00e9dition simultan\u00e9e de plusieurs fichiers</li> <li>la coloration syntaxique afin de mettre en \u00e9vidence les mots-cl\u00e9s du langage</li> <li>un terminal pour l'ex\u00e9cution des scripts</li> </ul> <p>Vous avez dor\u00e9navant le choix entre un grand nombre d'\u00e9diteurs de code source compatible avec Python. Voici quelques suggestions :</p> <ul> <li>Visual Studio Code code editing redefined by Microsoft</li> <li>PyCharm l'IDE Python pour les d\u00e9veloppeurs professionnels de JetBrains</li> <li>Spyder The Scientific Python Development Environment</li> </ul>    ![Interface de Visual Studio Code](assets/img/vscode.png)   Aper\u00e7u de l'interface de Visual Studio Code : [1] navigateur de fichiers, [2] \u00e9diteur de code, [3] terminal int\u00e9gr\u00e9 <p>Astuce</p> <p>En installant l'extension Python pour Visual Studio Code, vous pouvez enrichir l'interface de l'\u00e9diteur avec un bouton  pour \u00e9x\u00e9cuter un script afin de visualiser son r\u00e9sultat dans le terminal int\u00e9gr\u00e9. </p>"},{"location":"#installation-de-modules","title":"Installation de modules","text":"<p>La force de Python r\u00e9side dans les modules, apportant de nouvelles fonctionnalit\u00e9s qui enrichissent le langage de base. A chaque th\u00e8me, correspond un module : <code>polars</code> pour la manipulation de donn\u00e9es tabulaires, <code>plotly</code> pour la g\u00e9n\u00e9ration de graphiques, ...</p> <p>L'outil PIP permet de t\u00e9l\u00e9charger et d'installer un module. Dans un terminal (ou une invite de commandes sous Windows), vous devez taper la commande suivante :</p> <p>Windows :</p> <pre><code>pip.exe install [module]\n</code></pre> <p>macOS ou Linux :</p> <pre><code>pip3 install [module]\n</code></pre> <p><code>[module]</code> doit \u00eatre remplac\u00e9 par le nom du module \u00e0 installer. </p> <p>Attention !</p> <p>Cette commande doit \u00eatre ex\u00e9cut\u00e9e en mode administrateur. Sous Windows, dans le menu D\u00e9marrer, clic droit sur l'application \"invite de commandes\" et choisir \"ex\u00e9cuter en tant qu'administrateur\".</p> <p>Si vous ne disposez pas des droits administrateur, vous pouvez ajouter l'option <code>--user</code> \u00e0 la fin de la commande pour installer le module dans votre compte utilisateur.</p> <p>Nous utiliserons plusieurs modules au fil des chapitres de ce cours. Je vous encourage \u00e0 installer d\u00e8s maintenant tous les modules n\u00e9cessaires \u00e0 l'aide de la commande suivante :</p> <p>Windows :</p> <pre><code>pip.exe install numpy polars openpyxl xlrd2 plotly lxml beautifulsoup4 folium requests\n</code></pre> <p>macOS ou Linux :</p> <pre><code>pip3 install numpy polars openpyxl xlrd2 plotly lxml beautifulsoup4 folium requests\n</code></pre> <p>Maintenant que votre environnement de d\u00e9veloppement est configur\u00e9, il est temps de d\u00e9couvrir pas \u00e0 pas les sp\u00e9cificit\u00e9s du langage Python. </p>"},{"location":"chapter1/","title":"Welcome back to MkDocs","text":""},{"location":"chapter1/#whats-up","title":"What's up?","text":"First steps with Polars<pre><code>import numpy as np\nimport polars as pl\nprint('Hello World!)\n</code></pre> Correction First steps with Polars<pre><code>import numpy as np\nimport polars as pl\nprint('Hello World!)\n</code></pre>"},{"location":"chapter1/#thats-all-folks","title":"That's all folks","text":"<p>NBA2018-2019.zip </p> Method Description <code>GET</code>      Fetch resource <code>PUT</code>  Update resource <code>DELETE</code>      Delete resource <p></p> \\[ \\operatorname{ker} f=\\{g\\in G:f(g)=e_{H}\\}{\\mbox{.}} \\] <p>The homomorphism \\(f\\) is injective if and only if its kernel is only the singleton set \\(e_G\\), because otherwise \\(\\exists a,b\\in G\\) with \\(a\\neq b\\) such that \\(f(a)=f(b)\\).</p> <p>200 OK</p>"},{"location":"chapter2/","title":"Welcome back to MkDocs (REBOOT)","text":""},{"location":"chapter2/#whats-up","title":"What's up?","text":"<p>hmglhgmlgmhlghlgmhlgmhlgmh   </p>"},{"location":"chapter2/#thats-all-folks-guys","title":"That's all folks guys","text":""},{"location":"includes/abbreviations/","title":"Abbreviations","text":"<p>*[CSS]: Cascading Style Sheets</p> <p>*[HTML]: Hyper Text Markup Language</p> <p>*[HTTP]: Hyper Text Transfer Protocol</p> <p>*[IDLE]: Intergrated DeveLopment Environmment</p> <p>*[PIP]: Package Installer for Python</p> <p>*[W3C]: World Wide Web Consortium</p>"}]}